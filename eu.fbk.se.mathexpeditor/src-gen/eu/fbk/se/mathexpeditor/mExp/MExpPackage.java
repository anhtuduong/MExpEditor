/**
 * generated by Xtext 2.27.0
 */
package eu.fbk.se.mathexpeditor.mExp;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see eu.fbk.se.mathexpeditor.mExp.MExpFactory
 * @model kind="package"
 * @generated
 */
public interface MExpPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "mExp";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.fbk.eu/se/mathexpeditor/MExp";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "mExp";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MExpPackage eINSTANCE = eu.fbk.se.mathexpeditor.mExp.impl.MExpPackageImpl.init();

  /**
   * The meta object id for the '{@link eu.fbk.se.mathexpeditor.mExp.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see eu.fbk.se.mathexpeditor.mExp.impl.ModelImpl
   * @see eu.fbk.se.mathexpeditor.mExp.impl.MExpPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Const Definitions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__CONST_DEFINITIONS = 0;

  /**
   * The feature id for the '<em><b>Var Definitions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__VAR_DEFINITIONS = 1;

  /**
   * The feature id for the '<em><b>Exp Definitions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__EXP_DEFINITIONS = 2;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link eu.fbk.se.mathexpeditor.mExp.impl.ConstDefinitionImpl <em>Const Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see eu.fbk.se.mathexpeditor.mExp.impl.ConstDefinitionImpl
   * @see eu.fbk.se.mathexpeditor.mExp.impl.MExpPackageImpl#getConstDefinition()
   * @generated
   */
  int CONST_DEFINITION = 1;

  /**
   * The feature id for the '<em><b>Var Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONST_DEFINITION__VAR_NAME = 0;

  /**
   * The feature id for the '<em><b>Var Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONST_DEFINITION__VAR_VALUE = 1;

  /**
   * The number of structural features of the '<em>Const Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONST_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link eu.fbk.se.mathexpeditor.mExp.impl.VarDefinitionImpl <em>Var Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see eu.fbk.se.mathexpeditor.mExp.impl.VarDefinitionImpl
   * @see eu.fbk.se.mathexpeditor.mExp.impl.MExpPackageImpl#getVarDefinition()
   * @generated
   */
  int VAR_DEFINITION = 2;

  /**
   * The feature id for the '<em><b>Var Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DEFINITION__VAR_NAME = 0;

  /**
   * The feature id for the '<em><b>Var Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DEFINITION__VAR_VALUE = 1;

  /**
   * The number of structural features of the '<em>Var Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link eu.fbk.se.mathexpeditor.mExp.impl.ExpDefinitionImpl <em>Exp Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see eu.fbk.se.mathexpeditor.mExp.impl.ExpDefinitionImpl
   * @see eu.fbk.se.mathexpeditor.mExp.impl.MExpPackageImpl#getExpDefinition()
   * @generated
   */
  int EXP_DEFINITION = 3;

  /**
   * The feature id for the '<em><b>Var Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXP_DEFINITION__VAR_NAME = 0;

  /**
   * The feature id for the '<em><b>Var Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXP_DEFINITION__VAR_VALUE = 1;

  /**
   * The number of structural features of the '<em>Exp Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXP_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link eu.fbk.se.mathexpeditor.mExp.impl.MathExpressionImpl <em>Math Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see eu.fbk.se.mathexpeditor.mExp.impl.MathExpressionImpl
   * @see eu.fbk.se.mathexpeditor.mExp.impl.MExpPackageImpl#getMathExpression()
   * @generated
   */
  int MATH_EXPRESSION = 4;

  /**
   * The feature id for the '<em><b>Const</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATH_EXPRESSION__CONST = 0;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATH_EXPRESSION__VAR = 1;

  /**
   * The feature id for the '<em><b>Exp1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATH_EXPRESSION__EXP1 = 2;

  /**
   * The feature id for the '<em><b>Exp2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATH_EXPRESSION__EXP2 = 3;

  /**
   * The number of structural features of the '<em>Math Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATH_EXPRESSION_FEATURE_COUNT = 4;


  /**
   * Returns the meta object for class '{@link eu.fbk.se.mathexpeditor.mExp.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link eu.fbk.se.mathexpeditor.mExp.Model#getConstDefinitions <em>Const Definitions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Const Definitions</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.Model#getConstDefinitions()
   * @see #getModel()
   * @generated
   */
  EReference getModel_ConstDefinitions();

  /**
   * Returns the meta object for the containment reference list '{@link eu.fbk.se.mathexpeditor.mExp.Model#getVarDefinitions <em>Var Definitions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Var Definitions</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.Model#getVarDefinitions()
   * @see #getModel()
   * @generated
   */
  EReference getModel_VarDefinitions();

  /**
   * Returns the meta object for the containment reference list '{@link eu.fbk.se.mathexpeditor.mExp.Model#getExpDefinitions <em>Exp Definitions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Exp Definitions</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.Model#getExpDefinitions()
   * @see #getModel()
   * @generated
   */
  EReference getModel_ExpDefinitions();

  /**
   * Returns the meta object for class '{@link eu.fbk.se.mathexpeditor.mExp.ConstDefinition <em>Const Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Const Definition</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.ConstDefinition
   * @generated
   */
  EClass getConstDefinition();

  /**
   * Returns the meta object for the attribute '{@link eu.fbk.se.mathexpeditor.mExp.ConstDefinition#getVarName <em>Var Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var Name</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.ConstDefinition#getVarName()
   * @see #getConstDefinition()
   * @generated
   */
  EAttribute getConstDefinition_VarName();

  /**
   * Returns the meta object for the attribute '{@link eu.fbk.se.mathexpeditor.mExp.ConstDefinition#getVarValue <em>Var Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var Value</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.ConstDefinition#getVarValue()
   * @see #getConstDefinition()
   * @generated
   */
  EAttribute getConstDefinition_VarValue();

  /**
   * Returns the meta object for class '{@link eu.fbk.se.mathexpeditor.mExp.VarDefinition <em>Var Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Definition</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.VarDefinition
   * @generated
   */
  EClass getVarDefinition();

  /**
   * Returns the meta object for the attribute '{@link eu.fbk.se.mathexpeditor.mExp.VarDefinition#getVarName <em>Var Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var Name</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.VarDefinition#getVarName()
   * @see #getVarDefinition()
   * @generated
   */
  EAttribute getVarDefinition_VarName();

  /**
   * Returns the meta object for the attribute '{@link eu.fbk.se.mathexpeditor.mExp.VarDefinition#getVarValue <em>Var Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var Value</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.VarDefinition#getVarValue()
   * @see #getVarDefinition()
   * @generated
   */
  EAttribute getVarDefinition_VarValue();

  /**
   * Returns the meta object for class '{@link eu.fbk.se.mathexpeditor.mExp.ExpDefinition <em>Exp Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exp Definition</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.ExpDefinition
   * @generated
   */
  EClass getExpDefinition();

  /**
   * Returns the meta object for the attribute '{@link eu.fbk.se.mathexpeditor.mExp.ExpDefinition#getVarName <em>Var Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var Name</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.ExpDefinition#getVarName()
   * @see #getExpDefinition()
   * @generated
   */
  EAttribute getExpDefinition_VarName();

  /**
   * Returns the meta object for the containment reference '{@link eu.fbk.se.mathexpeditor.mExp.ExpDefinition#getVarValue <em>Var Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Var Value</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.ExpDefinition#getVarValue()
   * @see #getExpDefinition()
   * @generated
   */
  EReference getExpDefinition_VarValue();

  /**
   * Returns the meta object for class '{@link eu.fbk.se.mathexpeditor.mExp.MathExpression <em>Math Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Math Expression</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.MathExpression
   * @generated
   */
  EClass getMathExpression();

  /**
   * Returns the meta object for the attribute '{@link eu.fbk.se.mathexpeditor.mExp.MathExpression#getConst <em>Const</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Const</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.MathExpression#getConst()
   * @see #getMathExpression()
   * @generated
   */
  EAttribute getMathExpression_Const();

  /**
   * Returns the meta object for the attribute '{@link eu.fbk.se.mathexpeditor.mExp.MathExpression#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.MathExpression#getVar()
   * @see #getMathExpression()
   * @generated
   */
  EAttribute getMathExpression_Var();

  /**
   * Returns the meta object for the containment reference '{@link eu.fbk.se.mathexpeditor.mExp.MathExpression#getExp1 <em>Exp1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp1</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.MathExpression#getExp1()
   * @see #getMathExpression()
   * @generated
   */
  EReference getMathExpression_Exp1();

  /**
   * Returns the meta object for the containment reference '{@link eu.fbk.se.mathexpeditor.mExp.MathExpression#getExp2 <em>Exp2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp2</em>'.
   * @see eu.fbk.se.mathexpeditor.mExp.MathExpression#getExp2()
   * @see #getMathExpression()
   * @generated
   */
  EReference getMathExpression_Exp2();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  MExpFactory getMExpFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link eu.fbk.se.mathexpeditor.mExp.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see eu.fbk.se.mathexpeditor.mExp.impl.ModelImpl
     * @see eu.fbk.se.mathexpeditor.mExp.impl.MExpPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Const Definitions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__CONST_DEFINITIONS = eINSTANCE.getModel_ConstDefinitions();

    /**
     * The meta object literal for the '<em><b>Var Definitions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__VAR_DEFINITIONS = eINSTANCE.getModel_VarDefinitions();

    /**
     * The meta object literal for the '<em><b>Exp Definitions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__EXP_DEFINITIONS = eINSTANCE.getModel_ExpDefinitions();

    /**
     * The meta object literal for the '{@link eu.fbk.se.mathexpeditor.mExp.impl.ConstDefinitionImpl <em>Const Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see eu.fbk.se.mathexpeditor.mExp.impl.ConstDefinitionImpl
     * @see eu.fbk.se.mathexpeditor.mExp.impl.MExpPackageImpl#getConstDefinition()
     * @generated
     */
    EClass CONST_DEFINITION = eINSTANCE.getConstDefinition();

    /**
     * The meta object literal for the '<em><b>Var Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONST_DEFINITION__VAR_NAME = eINSTANCE.getConstDefinition_VarName();

    /**
     * The meta object literal for the '<em><b>Var Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONST_DEFINITION__VAR_VALUE = eINSTANCE.getConstDefinition_VarValue();

    /**
     * The meta object literal for the '{@link eu.fbk.se.mathexpeditor.mExp.impl.VarDefinitionImpl <em>Var Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see eu.fbk.se.mathexpeditor.mExp.impl.VarDefinitionImpl
     * @see eu.fbk.se.mathexpeditor.mExp.impl.MExpPackageImpl#getVarDefinition()
     * @generated
     */
    EClass VAR_DEFINITION = eINSTANCE.getVarDefinition();

    /**
     * The meta object literal for the '<em><b>Var Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_DEFINITION__VAR_NAME = eINSTANCE.getVarDefinition_VarName();

    /**
     * The meta object literal for the '<em><b>Var Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_DEFINITION__VAR_VALUE = eINSTANCE.getVarDefinition_VarValue();

    /**
     * The meta object literal for the '{@link eu.fbk.se.mathexpeditor.mExp.impl.ExpDefinitionImpl <em>Exp Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see eu.fbk.se.mathexpeditor.mExp.impl.ExpDefinitionImpl
     * @see eu.fbk.se.mathexpeditor.mExp.impl.MExpPackageImpl#getExpDefinition()
     * @generated
     */
    EClass EXP_DEFINITION = eINSTANCE.getExpDefinition();

    /**
     * The meta object literal for the '<em><b>Var Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXP_DEFINITION__VAR_NAME = eINSTANCE.getExpDefinition_VarName();

    /**
     * The meta object literal for the '<em><b>Var Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXP_DEFINITION__VAR_VALUE = eINSTANCE.getExpDefinition_VarValue();

    /**
     * The meta object literal for the '{@link eu.fbk.se.mathexpeditor.mExp.impl.MathExpressionImpl <em>Math Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see eu.fbk.se.mathexpeditor.mExp.impl.MathExpressionImpl
     * @see eu.fbk.se.mathexpeditor.mExp.impl.MExpPackageImpl#getMathExpression()
     * @generated
     */
    EClass MATH_EXPRESSION = eINSTANCE.getMathExpression();

    /**
     * The meta object literal for the '<em><b>Const</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MATH_EXPRESSION__CONST = eINSTANCE.getMathExpression_Const();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MATH_EXPRESSION__VAR = eINSTANCE.getMathExpression_Var();

    /**
     * The meta object literal for the '<em><b>Exp1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MATH_EXPRESSION__EXP1 = eINSTANCE.getMathExpression_Exp1();

    /**
     * The meta object literal for the '<em><b>Exp2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MATH_EXPRESSION__EXP2 = eINSTANCE.getMathExpression_Exp2();

  }

} //MExpPackage
