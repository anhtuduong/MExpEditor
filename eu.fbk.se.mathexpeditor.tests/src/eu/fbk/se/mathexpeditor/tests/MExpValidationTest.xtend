/*
 * generated by Xtext 2.27.0.M3
 */
package eu.fbk.se.mathexpeditor.tests

import com.google.inject.Inject
import eu.fbk.se.mathexpeditor.mExp.Model
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.eclipse.xtext.testing.validation.ValidationTestHelper
import eu.fbk.se.mathexpeditor.mExp.MExpPackage
import eu.fbk.se.mathexpeditor.validation.MExpValidator

@ExtendWith(InjectionExtension)
@InjectWith(MExpInjectorProvider)

class MExpValidationTest {
	@Inject
	ParseHelper<Model> parseHelper
	ValidationTestHelper validationTestHelper
	
	@Test
	def void testDuplicatedNames() {
		val result = parseHelper.parse('''
			Const x : 10;
			Const x : 10;
		''')
		Assertions.assertNotNull(result)
//		System.out.println("errors: " + validationTestHelper.assertError(result, result.constDefinitions, ))
		validationTestHelper.assertError(result, MExpPackage.Literals.CONST_DEFINITION, "Names must be unique", MExpValidator.DUPLICATED_VAR_NAME)
		
	}
}