/*
 * generated by Xtext 2.27.0.M3
 */
package eu.fbk.se.mathexpeditor.tests

import com.google.inject.Inject
import eu.fbk.se.mathexpeditor.mExp.Model
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(MExpInjectorProvider)
class MExpParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			Const y : 10;
			Const x1 : 10;
			Const x2 : 10;
			Const x3 : 10;
			Var x21 : 10;
			Exp x4 : a + y x (10);
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		System.out.println("errors: " + errors)
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}

